{
  "swagger": "2.0",
  "info": {
    "title": "Store",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "StoresService"
    }
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/stores": {
      "get": {
        "summary": "Get all stores",
        "operationId": "GetStores",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storespbGetStoresResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "summary": "Remove store",
        "operationId": "RemoveStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storespbRemoveStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Store"
        ]
      },
      "post": {
        "summary": "Create a new store",
        "operationId": "CreateStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storespbCreateStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storespbCreateStoreRequest"
            }
          }
        ],
        "tags": [
          "Store"
        ]
      }
    },
    "/api/stores/{id}": {
      "get": {
        "summary": "Get current store",
        "operationId": "GetStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storespbGetStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Store"
        ]
      },
      "put": {
        "summary": "Edit store",
        "operationId": "EditStore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storespbEditStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "amount": {
                  "type": "integer",
                  "format": "int32"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        ],
        "tags": [
          "Store"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storespbCreateStoreRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "storespbCreateStoreResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "storespbEditStoreResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "storespbGetStoreResponse": {
      "type": "object",
      "properties": {
        "store": {
          "$ref": "#/definitions/storespbStore"
        }
      }
    },
    "storespbGetStoresResponse": {
      "type": "object",
      "properties": {
        "stores": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storespbStore"
          }
        }
      }
    },
    "storespbRemoveStoreResponse": {
      "type": "object"
    },
    "storespbStore": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}
